FROM php:8.1-cli-alpine


WORKDIR /app

COPY package*.json .
COPY composer.lock .
COPY composer.json .
COPY .env .
COPY . .



RUN apk add --update \
    curl \
    php \
    php-opcache \
    php-openssl \
    php-pdo \
    php-json \
    php-phar \
    php-dom \
    && rm -rf /var/cache/apk/*


RUN curl -sS https://getcomposer.org/installer | php -- \
  --install-dir=/usr/local/bin --filename=composer

RUN composer update


RUN php artisan key:generate


EXPOSE 8001

CMD php artisan serve --host=0.0.0.0 --port=8001

# # Stage 1: Build Stage
# FROM composer:2 AS builder

# WORKDIR /app

# COPY . /app

# # Install dependencies
# RUN composer install --optimize-autoloader --no-dev

# # Stage 2: Production Stage
# FROM php:8.1-fpm-alpine

# WORKDIR /var/www/html

# # Install necessary extensions
# RUN docker-php-ext-install pdo pdo_mysql

# # Copy the application code from the build stage
# COPY --from=builder /app /var/www/html

# # Set permissions
# RUN chown -R www-data:www-data /var/www/html \
#     && chmod -R 755 /var/www/html/storage

# # Copy production PHP configuration
# COPY php.ini /usr/local/etc/php/php.ini

# # COPY php.ini-production $PHP_INI_DIR/php.ini

# # Remove development configuration files
# RUN rm -rf /var/www/html/docker-compose.yml /var/www/html/Dockerfile

# # Expose port 9000 and start php-fpm server
# EXPOSE 80
# CMD ["php-fpm"]
